  rStageRule:
    Type: AWS::Events::Rule
    Properties:
      Name:
        Fn::Sub:
          - sdlf-${pTeamName}-${pPipeline}-rule-${pStageName}
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
      Description:
        Fn::Sub:
          - Send events to ${pStageName} queue
          - pStageName:
              Ref: pStageName
      EventPattern:
        Ref: pEventPattern
      State: ENABLED
      Targets:
        - Id:
            Fn::Sub:
              - sdlf-${pTeamName}-${pPipeline}-rule-${pStageName}
              - pTeamName:
                  Ref: pTeamName
                pPipeline:
                  Ref: pPipeline
                pStageName:
                  Ref: pStageName
          Arn:
            Fn::GetAtt: [rQueueRoutingStep, Arn]
          SqsParameters:
            MessageGroupId:
              Fn::Sub:
                - ${pTeamName}-${pPipeline}
                - pTeamName:
                    Ref: pTeamName
                  pPipeline:
                    Ref: pPipeline
          InputPath: "$.detail"

  rQueueRoutingStep:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub:
          - sdlf-${pTeamName}-${pPipeline}-queue-${pStageName}.fifo
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
      FifoQueue: True
      ContentBasedDeduplication: True
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt: [rDeadLetterQueueRoutingStep, Arn]
        maxReceiveCount: 1
      VisibilityTimeout: 60
      KmsMasterKeyId:
        Fn::Sub:
          - "{{resolve:ssm:/SDLF/KMS/${pTeamName}/InfraKeyId}}"
          - pTeamName:
              Ref: pTeamName

  rDeadLetterQueueRoutingStep:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub:
          - sdlf-${pTeamName}-${pPipeline}-dlq-${pStageName}.fifo
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
      FifoQueue: True
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 60
      KmsMasterKeyId:
        Fn::Sub:
          - "{{resolve:ssm:/SDLF/KMS/${pTeamName}/InfraKeyId}}"
          - pTeamName:
              Ref: pTeamName

  rQueuePolicyEventsStageRule:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - SQS:SendMessage
            Resource:
              Fn::GetAtt: [rQueueRoutingStep, Arn]
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Fn::GetAtt: [rStageRule, Arn]
      Queues:
        - Ref: rQueueRoutingStep

  rQueueLambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Condition: EventBased
    Properties:
      BatchSize: 10
      Enabled: True
      EventSourceArn:
        Fn::GetAtt: [rQueueRoutingStep, Arn]
      FunctionName:
        Fn::GetAtt: [rLambdaRoutingStep, Arn]

  rPostStateRule:
    Type: AWS::Events::Rule
    Condition: ScheduleBased
    Properties:
      Name:
        Fn::Sub:
          - sdlf-${pTeamName}-${pPipeline}-schedule-rule-${pStageName}
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
      Description:
        Fn::Sub:
          - Trigger ${pStageName} Routing Lambda on a specified schedule
          - pStageName:
              Ref: pStageName
      State: ENABLED
      ScheduleExpression:
        Ref: pSchedule
      Targets:
        - Id:
            Fn::Sub:
              - sdlf-${pTeamName}-${pPipeline}-schedule-rule-${pStageName}
              - pTeamName:
                  Ref: pTeamName
                pPipeline:
                  Ref: pPipeline
                pStageName:
                  Ref: pStageName
          Arn:
            Fn::GetAtt: [rLambdaRoutingStep, Arn]
          Input:
            Fn::Sub:
              - |
                {
                  "team": "${pTeamName}",
                  "pipeline": "${pPipeline}",
                  "pipeline_stage": "${pStageName}",
                  "trigger_type": "${pTriggerType}",
                  "org": "${pOrg}",
                  "app": "${pApp}",
                  "env": "${pEnv}"
                }
              - pTeamName:
                  Ref: pTeamName
                pPipeline:
                  Ref: pPipeline
                pStageName:
                  Ref: pStageName
                pTriggerType:
                  Ref: pTriggerType
                pOrg:
                  Ref: pOrg
                pApp:
                  Ref: pApp
                pEnv:
                  Ref: pEnv

  rPermissionEventsInvokeRoutingLambda:
    Type: AWS::Lambda::Permission
    Condition: ScheduleBased
    Properties:
      FunctionName:
        Fn::GetAtt: [rLambdaRoutingStep, Arn]
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: [rPostStateRule, Arn]

  ######## SSM OUTPUTS #########
  rQueueRoutingStepSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub:
          - /SDLF/SQS/${pTeamName}/${pPipeline}${pStageName}Queue
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
      Type: String
      Value:
        Fn::GetAtt: [rQueueRoutingStep, QueueName]
      Description:
        Fn::Sub:
          - "Name of the ${pStageName} ${pTeamName} ${pPipeline} Queue"
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName

  rDeadLetterQueueRoutingStepSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub:
          - /SDLF/SQS/${pTeamName}/${pPipeline}${pStageName}DLQ
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
      Type: String
      Value:
        Fn::GetAtt: [rDeadLetterQueueRoutingStep, QueueName]
      Description:
        Fn::Sub:
          - "Name of the ${pStageName} ${pTeamName} ${pPipeline} DLQ"
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName

  rStateMachineSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub:
          - /SDLF/SM/${pTeamName}/${pPipeline}${pStageName}SM
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
      Type: String
      Value:
        Ref: rStateMachine
      Description:
        Fn::Sub:
          - "ARN of the ${pStageName} ${pTeamName} ${pPipeline} State Machine"
          - pTeamName:
              Ref: pTeamName
            pPipeline:
              Ref: pPipeline
            pStageName:
              Ref: pStageName
