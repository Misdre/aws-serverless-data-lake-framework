AWSTemplateFormatVersion: 2010-09-09
Description: Multi-environment CICD foundations resources in shared and child accounts

Parameters:
  pArtifactsBucket:
    Description: The artifactory bucket used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/DevOpsCFNBucket
  pEnvironment:
    Description: Environment name
    Type: String
    AllowedValues: [dev, test, prod]
    Default: dev
  pChildAccountId:
    Description: Child AWS account ID
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
  pFoundationsRepository:
    Type: String
    Default: sdlf-foundations
  pMainRepository:
    Type: String
    Default: sdlf-main
  pTeamRepository:
    Type: String
    Default: sdlf-team
  pPipelineRepository:
    Type: String
    Default: sdlf-pipeline
  pDatasetRepository:
    Type: String
    Default: sdlf-dataset
  pStageRepositoryPrefix:
    Type: String
    Default: sdlf-stage*
  pDatalakeLibraryRepositoryName:
    Description: Name of the repository containing the code for the Datalake Library.
    Type: String
    Default: sdlf-datalakeLibrary
  pPipLibrariesRepositoryName:
    Description: The repository containing requirements.txt
    Type: String
    Default: sdlf-pipLibrary

Mappings:
  pCodeCommitBranch:
    dev:
      branch: dev
    test:
      branch: test
    prod:
      branch: master

Conditions:
  CrossAccount: !Not [!Equals [!Ref pChildAccountId, !Ref "AWS::AccountId"]]

Resources:
  rKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS Key for Encryption of CodePipeline Artifacts in Child Account
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: Allow child account use
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${pChildAccountId}:root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
              - kms:List*
              - kms:Describe*
            Resource: "*"
          - Sid: Allow child account grant
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${pChildAccountId}:root
            Action:
              - kms:CreateGrant
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: "*"
            Condition:
              Bool:
                kms:GrantIsForAWSResource: true
          - Sid: Allow logs access
            Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource: "*"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  rKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/sdlf-cicd-kms-key-${pEnvironment}
      TargetKeyId: !Ref rKMSKey

  rCodeCommitRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role assumed by CodePipeline in child AWS account
      Path: /
      RoleName: !Sub sdlf-cicd-foundations-codecommit-${pEnvironment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${pChildAccountId}:root
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:CreateApprovalRuleTemplate
                  - codecommit:DeleteApprovalRuleTemplate
                  - codecommit:GetApprovalRuleTemplate
                  - codecommit:ListApprovalRuleTemplates
                  - codecommit:ListRepositories
                  - codecommit:ListRepositoriesForApprovalRuleTemplate
                  - codecommit:UpdateApprovalRuleTemplateContent
                  - codecommit:UpdateApprovalRuleTemplateDescription
                  - codecommit:UpdateApprovalRuleTemplateName
                Resource: "*"
              - Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:Describe*
                  - codecommit:Get*
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:GitPull
                  - codecommit:List*
                  - codecommit:UploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pFoundationsRepository}
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pMainRepository}
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:aws:s3:::sdlf-cfn-artifacts-${AWS::Region}-${pChildAccountId}
                  - !Sub arn:aws:s3:::sdlf-cfn-artifacts-${AWS::Region}-${pChildAccountId}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: !GetAtt rKMSKey.Arn
              - Effect: Allow
                Action:
                  - iam:GetRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/sdlf-cicd-team-codecommit-*

  rCodeCommitTriggerRule:
    Condition: CrossAccount
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pFoundationsRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:events:${AWS::Region}:${pChildAccountId}:event-bus/default
          Id: !Sub sdlf-cicd-foundations-codecommit-${pEnvironment}
          RoleArn: !GetAtt rEventBusRole.Arn

  rModuleCodeCommitRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role assumed by CodePipeline
      Path: /
      RoleName: !Sub sdlf-cicd-module-codecommit-${pEnvironment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:CreateApprovalRuleTemplate
                  - codecommit:DeleteApprovalRuleTemplate
                  - codecommit:GetApprovalRuleTemplate
                  - codecommit:ListApprovalRuleTemplates
                  - codecommit:ListRepositories
                  - codecommit:ListRepositoriesForApprovalRuleTemplate
                  - codecommit:UpdateApprovalRuleTemplateContent
                  - codecommit:UpdateApprovalRuleTemplateDescription
                  - codecommit:UpdateApprovalRuleTemplateName
                Resource: "*"
              - Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:Describe*
                  - codecommit:Get*
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:GitPull
                  - codecommit:List*
                  - codecommit:UploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pFoundationsRepository}
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pTeamRepository}
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipelineRepository}
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatasetRepository}
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageRepositoryPrefix}
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatalakeLibraryRepositoryName}
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipLibrariesRepositoryName}
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:aws:s3:::${pArtifactsBucket}
                  - !Sub arn:aws:s3:::${pArtifactsBucket}/*
                  - !Sub arn:aws:s3:::sdlf-cfn-artifacts-${AWS::Region}-${pChildAccountId}
                  - !Sub arn:aws:s3:::sdlf-cfn-artifacts-${AWS::Region}-${pChildAccountId}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: !GetAtt rKMSKey.Arn
              - Effect: Allow
                Action:
                  - iam:GetRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/sdlf-cicd-team-codecommit-*

  rEventBusRole:
    Condition: CrossAccount
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      RoleName: !Sub sdlf-cicd-foundations-eventbus-${pEnvironment}
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: events:PutEvents
                Resource: !Sub arn:aws:events:${AWS::Region}:${pChildAccountId}:event-bus/default

  rKMSKeySsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/KMS/${pEnvironment}/CICDKeyId
      Type: String
      Value: !GetAtt rKMSKey.Arn
      Description: !Sub ${pEnvironment} environment CICD KMS key
  rChildAccountIdSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/Misc/${pEnvironment}/AccountId
      Type: String
      Value: !Ref pChildAccountId
      Description: !Sub ${pEnvironment} environment Child Account Id

  ######## TEAM MODULE CODEPIPELINE #########
  # build in the devops account as this is where the module is used
  rCodePipelineRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F38
            reason: Condition Applied
    Properties:
      RoleName: sdlf-cicd-devops-cfn-mod-codepipeline # TODO
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cfn-mod-codepipeline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: iam:PassRole
                Resource: "*"
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - lambda.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/glue/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/EMR*
              - Effect: Allow
                Action:
                  - iam:ListRoles
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - Effect: Allow
                Action:
                  - iam:CreateRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/glue/sdlf-*
              - Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/glue/sdlf-*
                Condition:
                  ArnEquals:
                    iam:PolicyARN:
                      - !Sub arn:aws:iam::${AWS::AccountId}:policy/sdlf-*
              - Effect: Allow
                Action:
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:ListRolePolicies
                  - iam:PutRolePolicy
                  - iam:UntagRole
                  - iam:UpdateRole
                  - iam:UpdateRoleDescription
                  - iam:TagRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/state-machine/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/glue/sdlf-*
              - Effect: Allow
                Action:
                  - iam:ListPolicies
                  - iam:ListPolicyVersions
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:policy/*
              - Effect: Allow
                Action:
                  - iam:CreatePolicy
                  - iam:CreatePolicyVersion
                  - iam:DeletePolicy
                  - iam:DeletePolicyVersion
                  - iam:GetPolicy
                  - iam:GetPolicyVersion
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:policy/sdlf-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:policy/state-machine/sdlf-*
              - Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/sdlf-*
              - Effect: Allow
                Action:
                  - lambda:GetLayerVersion
                  - lambda:ListFunctions
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:CreateAlias
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:DeleteFunctionConcurrency
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:ListTags
                  - lambda:PublishVersion
                  - lambda:PutFunctionConcurrency
                  - lambda:RemovePermission
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateAlias
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:UpdateFunctionConfiguration
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-*
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-foundations-rKibana*
              - Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping
                  - lambda:DeleteEventSourceMapping
                  - lambda:GetEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
                Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-*
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                Resource: !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/*
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:CreateProject
                  - codebuild:StartBuild
                  - codebuild:UpdateProject
                Resource: !GetAtt [rCloudFormationModuleInfrastructure, Outputs.oBuildCloudformationModuleStageArn]
              - Effect: Allow
                Action:
                  - states:CreateActivity
                  - states:CreateStateMachine
                  - states:ListActivities
                  - states:ListStateMachines
                  - states:TagResource
                Resource: !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - states:DeleteStateMachine
                  - states:DescribeStateMachine
                  - states:DescribeStateMachineForExecution
                  - states:UpdateStateMachine
                Resource: !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:sdlf-*
              - Effect: Allow
                Action:
                  - states:DescribeActivity
                  - states:DeleteActivity
                  - states:GetActivityTask
                Resource: !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:activity:sdlf-*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DeleteLogStream
                  - logs:DeleteLogGroup
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:PutRetentionPolicy
                  - logs:TagLogGroup
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sdlf-*:log-stream:*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/sdlf-*:log-stream:*
              - Effect: Allow
                Action:
                  - cloudwatch:DeleteAlarms
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:PutMetricData
                  - cloudwatch:SetAlarmState
                Resource:
                  - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:sdlf-*
              - Effect: Allow
                Action:
                  - sqs:ListQueues
                Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - sqs:AddPermission
                  - sqs:ChangeMessageVisibility
                  - sqs:ChangeMessageVisibilityBatch
                  - sqs:CreateQueue
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:SetQueueAttributes
                  - sqs:TagQueue
                Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:DeleteBucketPolicy
                  - s3:GetEncryptionConfiguration
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBuckets
                  - s3:ListObjectsV2
                  - s3:PutBucketAcl
                  - s3:PutBucketLogging
                  - s3:PutBucketPolicy
                  - s3:PutBucketVersioning
                  - s3:PutEncryptionConfiguration
                  - s3:PutObject
                  - s3:SetBucketEncryption
                Resource:
                  - !Sub arn:aws:s3:::${pArtifactsBucket}
                  - !Sub arn:aws:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:DescribeParameters
                  - ssm:GetOpsSummary
                  - ssm:GetParameter
                  - ssm:GetParameterHistory
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:ListTagsForResource
                  - ssm:RemoveTagsFromResource
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/*
              - Effect: Allow
                Action:
                  - ssm:DeleteParameter
                  - ssm:PutParameter
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/*
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource:
                  - !GetAtt rKMSKey.Arn
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !GetAtt rModuleCodeCommitRole.Arn

  rBuildCloudformationModuleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-build-cfn-module-codebuild
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/sdlf-*
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - lambda:List*
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:GetLayer*
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:sdlf-*
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource:
                  - !GetAtt rKMSKey.Arn
              - Effect: Allow
                Action:
                  - iam:ListPolicies
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:GetRolePolicy
                  - iam:PutRolePolicy
                  - iam:*
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/CloudFormationManagedUplo-LogAndMetricsDeliveryRol-*"
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStacks
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/CloudFormationManagedUploadInfrastructure/*"
              - Effect: Allow
                Action:
                  - cloudformation:RegisterType
                  - cloudformation:SetTypeDefaultVersion
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:type/MODULE/awslabs::sdlf::*"
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:type/module/awslabs-sdlf-*"
              - Effect: Allow
                Action:
                  - s3:CreateBucket # necessary for CfnUploadInfra stack
                  - s3:PutLifecycleConfiguration # necessary for CfnUploadInfra stack
                  - s3:DeleteBucket
                  - s3:DeleteBucketPolicy
                  - s3:GetEncryptionConfiguration
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBuckets
                  - s3:ListObjectsV2
                  - s3:PutBucketAcl
                  - s3:PutBucketLogging
                  - s3:PutBucketPolicy
                  - s3:PutBucketVersioning
                  - s3:PutEncryptionConfiguration
                  - s3:PutObject # necessary for cfn submit
                  - s3:SetBucketEncryption
                Resource:
                  - arn:aws:s3:::cloudformationmanageduploadinfra-accesslogsbucket-*
                  - arn:aws:s3:::cloudformationmanageduploadinfrast-artifactbucket-*
              - Effect: Allow
                Action: # TODO CreateKey + d'autres trucs
                  - kms:*
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - cloudformation:DescribeTypeRegistration
                Resource:
                  - "*"

  rCloudFormationModuleInfrastructure:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-cicd-cfn-module.yaml
      Parameters:
        pArtifactsBucket: /SDLF/S3/DevOpsCFNBucket
        pSharedDevOpsAccountKmsKeyArn: !GetAtt rKMSKey.Arn
        pDevops: "Devops"

  rFoundationsStateMachinePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: rCloudFormationModuleInfrastructure
    Properties:
      RoleArn: !GetAtt rCodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: Source
              RoleArn: !GetAtt rModuleCodeCommitRole.Arn
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pFoundationsRepository
                BranchName: master # TODO?
                PollForSourceChanges: false
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: Build
              InputArtifacts:
              - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !GetAtt [rCloudFormationModuleInfrastructure, Outputs.oBuildCloudformationModuleStageArn]
                EnvironmentVariables: '[{"name":"MODULE_NAME", "value":"foundations", "type":"PLAINTEXT"}]'
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !GetAtt rKMSKey.Arn
          Type: KMS
        Location: !Ref pArtifactsBucket

  rTeamStateMachinePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: rCloudFormationModuleInfrastructure
    Properties:
      RoleArn: !GetAtt rCodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: Source
              RoleArn: !GetAtt rModuleCodeCommitRole.Arn
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pTeamRepository
                BranchName: master # TODO?
                PollForSourceChanges: false
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: Build
              InputArtifacts:
              - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !GetAtt [rCloudFormationModuleInfrastructure, Outputs.oBuildCloudformationModuleStageArn]
                EnvironmentVariables: '[{"name":"MODULE_NAME", "value":"team", "type":"PLAINTEXT"}]'
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !GetAtt rKMSKey.Arn
          Type: KMS
        Location: !Ref pArtifactsBucket

  rCloudWatchRepositoryTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: sdlf-cicd-eventbridge-trigger
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: sdlf-cicd-eventbridge-trigger
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rFoundationsStateMachinePipeline}
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rTeamStateMachinePipeline}

  rFoundationsStateMachineTriggerEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub "Run Foundations State Machine on ${pFoundationsRepository} repository update"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pFoundationsRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - master
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rFoundationsStateMachinePipeline}
          Id: !Sub sdlf-${pFoundationsRepository}-trigger
          RoleArn: !GetAtt rCloudWatchRepositoryTriggerRole.Arn

  rTeamStateMachineTriggerEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub "Run Team State Machine on ${pTeamRepository} repository update"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${pTeamRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - master
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rTeamStateMachinePipeline}
          Id: !Sub sdlf-${pTeamRepository}-trigger
          RoleArn: !GetAtt rCloudWatchRepositoryTriggerRole.Arn
